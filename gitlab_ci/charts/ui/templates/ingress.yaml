---
# Когда мы создаем ingress то GKE Ingress controller создается и конфигурируется на external HTTP(S) load balancer (по-умолчанию)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "ui.fullname" . }}
  # это блок метаданных (metadata) для Kubernetes-объекта, который позволяет хранить произвольные пары "ключ-значение" в виде аннотаций
  # Например, в Ingress-объекте аннотации могут использоваться для настройки поведения Ingress-контроллера, который обрабатывает HTTP-запросы и маршрутизирует их на соответствующие сервисы в Kubernetes-кластере.
  # annotations:
    # Подключаем статический ip который мы создали ранее:
    # kubernetes.io/ingress.global-static-ip-name: dev-cluster-gitlab
    # If the class annotation is not specified it defaults to "gce".
    # Выбираем каким ingress пользоваться если их стоит несколько
    # kubernetes.io/ingress.class: "nginx"
    # # Перенаправляет все http запросы на https, также требует, чтобы на сервере был установлен SSL-сертификат и ключ, даже если само соединение использует HTTP-протокол. Если сервер не настроен с SSL-сертификатом и ключом, то запросы будут отвергнуты с ошибкой.    
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # # изменяет путь запроса на /, что означает, что он будет передан целевому сервису без изменений. Таким образом, в приложении можно настроить обработку запросов, которые пришли на конкретный путь, например /api/v1 или /dashboard, и все запросы будут корректно переданы соответствующему сервису внутри кластера Kubernetes.
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  # tls:
  # - secretName: ui-ingress
  # здесь мы определяем правила маршрутизации для входящих запросов.
  rules:
  - host: vasiliybasov.gitlab.basov.world
  # мы указываем, что будем маршрутизировать запросы по HTTP протоколу.
    http:
      # здесь мы определяем пути, которые будут маршрутизироваться.
      paths:
      # мы определяем, что будем маршрутизировать запросы с корневого пути.
      - path: /
        # это указывает, что мы будем использовать префиксное сопоставление для маршрутизации запросов. 
        # То есть любой запрос, который начинается с указанного пути, будет считаться соответствующим.
        pathType: Prefix
        # здесь мы определяем, какой сервис будет обрабатывать запросы, соответствующие указанному пути.
        backend:
          # мы указываем, что будем использовать сервис для обработки запросов.
          service:
            # мы указываем имя сервиса, который будет обрабатывать запросы.
            name: {{ template "ui.fullname" . }}
            # Порт на который будет посылаться трафик на сервис NodePort (прописан в ui-service.yml)
            port:
              number: {{ .Values.service.externalPort }}
  ingressClassName: nginx
